plugins {
    id 'java-library'
    id 'idea'
    id 'eclipse'
    alias libs.plugins.licenser
    alias libs.plugins.gradleutils
    alias testLibs.plugins.aggregate
}

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

license {
    header = rootProject.file('LICENSE-header.txt')
    newLine = false
    exclude '**/*.properties'
}

aggregateTesting {
    final bulkTests = providers.gradleProperty('bulk_tests').<boolean>map { 'true'.equalsIgnoreCase(it) }.getOrElse(false)
    jvms = (!bulkTests ? [ 'Adoptium':  [16] ] : [
        'Adoptium':  [16, 17, 18, 19, 20, 21],
        'Amazon':    [16, 17, 18, 19, 20, 21],
        'Azul':      (16..21),
        'BellSoft':  (16..21),
        'GraalVM':   [                    21],
        //'IBM':       [16, 17, 18, 19, 20    ],
        'Microsoft': [16, 17,             21],
        'Oracle':    (16..21),
        'SAP':       (16..20)
    ]) as Map<String, List<Integer>>
}

tasks.named('test', Test) {
    useJUnitPlatform()
    reports.html.outputLocation = rootProject.layout.buildDirectory.dir('reports')
    reports.junitXml.outputLocation = rootProject.layout.buildDirectory.dir('test-results')
}

dependencies {
    testImplementation rootProject
    testImplementation project(':at-mlservice')
    testImplementation project(':at-test-jar')
    testImplementation testLibs.junit.api
    testImplementation testLibs.unsafe
    testImplementation libs.securemodules
    testImplementation libs.modlauncher
    testImplementation libs.asm
    testImplementation libs.asm.tree
    testImplementation libs.jopt
    testImplementation libs.log4j.api
    testImplementation libs.log4j.core
    testImplementation testLibs.gson
    testRuntimeOnly testLibs.bundles.junit.runtime
    testCompileOnly libs.nulls
}
