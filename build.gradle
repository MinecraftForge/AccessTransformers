import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'eclipse'
    id 'idea'
    alias libs.plugins.versions
    alias libs.plugins.shadow
    alias libs.plugins.licenser
    alias libs.plugins.gradleutils
}

final projectDisplayName = 'AccessTransformers'
final projectVendor = 'Forge Development LLC'
description = 'Transforms class member access based on specification files.'
group = 'net.minecraftforge'
version = gitversion.tagOffset

println "Version: $version"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
    withSourcesJar()
}

tasks.named('jar', Jar) {
    final map = [
        'Specification-Title'   : projectDisplayName,
        'Specification-Vendor'  : projectVendor,
        'Specification-Version' : '1',
        'Implementation-Title'  : projectDisplayName,
        'Implementation-Version': project.version,
        'Implementation-Vendor' : projectVendor
    ]

    manifest {
        attributes(map, 'net/minecraftforge/accesstransformer/')
        attributes(map, 'net/minecraftforge/accesstransformer/service/')
    }

    dependsOn ':at-mlservice:processResources'
    dependsOn ':at-mlservice:compileJava'
    from provider { project(':at-mlservice').sourceSets.main.output }
}

license {
    header = rootProject.file('LICENSE-header.txt')
    newLine = false
}

changelog {
    from '1.0'
}

dependencies {
    implementation libs.jopt
    implementation libs.bundles.asm
    implementation libs.log4j.api
    implementation libs.log4j.core
}

tasks.named('shadowJar', ShadowJar) {
    manifest {
        attributes([
            'Main-Class'   : 'net.minecraftforge.accesstransformer.TransformerProcessor',
            'Multi-Release': 'true'
        ])
    }

    archiveClassifier = 'fatjar'
    exclude '**/Log4j2Plugins.dat'
}

artifacts {
    archives shadowJar
}

publishing {
    publications.register('mavenJava', MavenPublication) {
        from components.java

        artifactId = 'accesstransformers'

        pom { pom ->
            name = projectDisplayName
            description = project.description

            gradleutils.pom.setGitHubDetails pom

            licenses {
                license gradleutils.pom.licenses.MIT
            }

            developers {
                developer gradleutils.pom.developers.LexManos
                developer gradleutils.pom.developers.cpw
                developer gradleutils.pom.developers.DemonWav
            }
        }
    }

    repositories {
        maven gradleutils.publishingForgeMaven
    }
}
